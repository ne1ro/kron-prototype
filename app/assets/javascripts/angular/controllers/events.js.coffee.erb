# Events controller
@EventCtrl = ["$scope", "$filter", "User", "Event", "Notification", "socket", ($scope, $filter, User, Event, Notification, socket) ->
  # Get users from path
  path = window.location.pathname
  user_id = path.substr(7)
  
  $scope.events = Event.query uid : user_id, ((data) ->
    # Success
  ), (err) ->
    # Error
  $scope.user = User.get uid : user_id, ((data) ->
    for following in data.following_ids
      Event.query uid : following.$oid, ((data) ->
        for event in data
          event.user = User.get uid : following.$oid
          $scope.events.push event
      )
  )

  $scope.data = new Date()
  $scope.newEvent = new Event
  $scope.editEvent = new Event

  # Get current user
  socket.on 'user:get_current', (data) ->
    socket.emit 'user:show_current', user_id

  # On message notify
  socket.on 'notify:send', (data) ->
    $scope.notify = data
    $('#black').fadeIn 500
    $('#notify').slideDown 500
    audioElement = document.createElement("audio")
    audioElement.setAttribute "src", "/notification.wav"
    audioElement.setAttribute "autoplay", "autoplay"
    $.get()
    audioElement.addEventListener "load", (->
      audioElement.play()
    ), true

  # Create new event and notifications
  $scope.createEvent = ->
    Event.save uid : user_id, $scope.newEvent, ((data) ->
      
      # Success callback
      data.notifications = []
      for notification in $scope.newEvent.notifications
        Notification.save uid : user_id, eid : data._id.$oid, notification, ((notif_data) ->
          # Notifications success
          socket.emit 'notify:create', notif_data
          data.notifications.push notif_data
        ), (err) ->
          # Notifications error
      
      $scope.events.push data
      $scope.newEvent = new Event # reset scope`s new event

      # Create new notifications
      $scope.newDate()
      $scope.newEvent.notifications = []
      $scope.addnewNotification($scope.newEvent.time)
    ), (err) ->
      #error call-back 

  # Show event before edit
  $scope.showEvent = (event, $index) ->
    $scope.editEvent = event
    $scope.editEventIndex = $index
    
    # Check for undefined
    if typeof($scope.editEvent.notifications) == 'undefined'
      $scope.editEvent.notifications = []

  # Update event
  $scope.updateEvent = ->
    $scope.editEvent.$update id : $scope.editEvent._id.$oid, uid : user_id, ((data) ->
      
      # Success
      Notification.query uid : user_id, eid : data._id.$oid, ((notes) ->
        for note in notes # delete notifications
          socket.emit 'notify:delete', note
          Notification.delete uid: user_id, eid : data._id.$oid, id : note._id.$oid
      ), (err) ->
      
      for note in $scope.editEvent.notifications # create new notifications
        note._id = undefined
        Notification.save uid : user_id, eid : data._id.$oid, note, ((notif_data) ->
          # Notifications success
          socket.emit 'notify:create', notif_data
        ), (err) ->
          # Notifications error
    ), (err) ->
      # Error 
    
  # Destroy event
  $scope.deleteEvent = (event, $index) ->
    Event.delete uid : user_id, id : event._id.$oid, ((data) ->
      # Delete every notification from event
      for note in event.notifications
        socket.emit 'notify:delete', note
      $scope.events.splice($index,1)
    ), (err) ->
      # Error

  # Create new notification
  $scope.addnewNotification = (datetime) ->
    notification =
      time : $scope.newEvent.time
    $scope.newEvent.notifications.push(notification)

  # Create new notification in edit event
  $scope.addeditNotification = (datetime) ->
    notification =
      time : $scope.editEvent.time
    $scope.editEvent.notifications.push(notification)

  # Remove notification
  $scope.removeNotification = ($index) ->
    # Check for undefined
    unless typeof($scope.newEvent.notifications) == 'undefined'
      $scope.newEvent.notifications.splice($index,1)
    else
      unless typeof($scope.editEvent.notifications) == 'undefined'
        $scope.editEvent.notifications.splice($index,1)

  # Get current data and time
  $scope.newDate = ->
    $scope.newEvent.time = new Date()
    $scope.newEvent.notifications = []
    $scope.addnewNotification($scope.newEvent.time)
    $scope.month = $scope.newEvent.time.getMonth()
]
